<RadioButton x:Class="Tum4ik.JustClipboardManager.Controls.NavigationButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Tum4ik.JustClipboardManager.Controls"
             xmlns:theming="clr-namespace:Tum4ik.JustClipboardManager.PluginDevKit.Theming;assembly=Tum4ik.JustClipboardManager.PluginDevKit"
             mc:Ignorable="d"
             Cursor="Hand">
  <RadioButton.Template>
    <ControlTemplate TargetType="controls:NavigationButton">
      <Border x:Name="_border"
              CornerRadius="4" Height="36"
              Background="Transparent">
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
          <Rectangle x:Name="_selectionPointer"
                     Width="3" Height="16" RadiusX="1.5" RadiusY="1.5"
                     Fill="{DynamicResource {x:Static theming:AppColors.AccentDefaultBrush}}"
                     VerticalAlignment="Center"
                     Visibility="Hidden"/>
          <controls:SvgIcon x:Name="_icon"
                            Icon="{TemplateBinding Icon}"
                            Color="{DynamicResource {x:Static theming:AppColors.TextPrimaryBrush}}"
                            Width="16" Height="16"
                            VerticalAlignment="Center"
                            Margin="9, 0, 16, 0"/>
          <TextBlock x:Name="_text"
                     Text="{TemplateBinding Text}"
                     VerticalAlignment="Center"/>
        </StackPanel>
      </Border>
      <ControlTemplate.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ItemHoverBackgroundBrush}}"/>
          <Setter TargetName="_selectionPointer" Property="Fill" Value="{DynamicResource {x:Static theming:AppColors.AccentSecondaryBrush}}"/>
        </Trigger>
        <Trigger Property="IsPressed" Value="True">
          <Setter TargetName="_icon" Property="Color" Value="{DynamicResource {x:Static theming:AppColors.TextSecondaryBrush}}"/>
          <Setter TargetName="_text" Property="Foreground" Value="{DynamicResource {x:Static theming:AppColors.TextSecondaryBrush}}"/>
          <Setter TargetName="_selectionPointer" Property="Fill" Value="{DynamicResource {x:Static theming:AppColors.AccentTertiaryBrush}}"/>
        </Trigger>
        <Trigger Property="IsChecked" Value="True">
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ItemHoverBackgroundBrush}}"/>
          <Setter TargetName="_selectionPointer" Property="Visibility" Value="Visible"/>
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsPressed" Value="True"/>
            <Condition Property="IsChecked" Value="False"/>
          </MultiTrigger.Conditions>
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ItemPressedBackgroundBrush}}"/>
        </MultiTrigger>
        <Trigger Property="IsEnabled" Value="False">
          <Setter TargetName="_icon" Property="Color" Value="{DynamicResource {x:Static theming:AppColors.TextDisabledBrush}}"/>
          <Setter TargetName="_text" Property="Foreground" Value="{DynamicResource {x:Static theming:AppColors.TextDisabledBrush}}"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
  </RadioButton.Template>
</RadioButton>
