<ComboBox x:Class="Tum4ik.JustClipboardManager.Controls.WinUiComboBox"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:controls="clr-namespace:Tum4ik.JustClipboardManager.Controls"
          xmlns:theming="clr-namespace:Tum4ik.JustClipboardManager.PluginDevKit.Theming;assembly=Tum4ik.JustClipboardManager.PluginDevKit"
          mc:Ignorable="d"
          x:Name="this"
          Height="32"
          MinWidth="128"
          FocusVisualStyle="{x:Null}">
  <ComboBox.Template>
    <ControlTemplate TargetType="controls:WinUiComboBox">
      <Grid>
        <ToggleButton x:Name="_toggleButton"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                      Cursor="Hand"
                      Focusable="False">
          <ToggleButton.Template>
            <ControlTemplate TargetType="ToggleButton">
              <Border x:Name="_border"
                      CornerRadius="4"
                      BorderThickness="1" BorderBrush="{DynamicResource {x:Static theming:AppColors.ControlBorderGradientBrush}}"
                      Background="{DynamicResource {x:Static theming:AppColors.ControlBackgroundBrush}}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <ContentControl x:Name="_selectedItemContent"
                                  Grid.Column="0"
                                  Content="{Binding SelectedItem, ElementName=this}"
                                  ContentTemplate="{Binding SelectedItemTemplate, ElementName=this}"/>
                  <controls:SvgIcon x:Name="_expandArrowIcon"
                                    Grid.Column="1"
                                    Icon="ExpandArrow"
                                    Width="8" Height="6"
                                    Color="{DynamicResource {x:Static theming:AppColors.TextSecondaryBrush}}"
                                    Margin="15, 1, 15, 0"/>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="_border"
                          Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ControlHoverBackgroundBrush}}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                  <Setter TargetName="_border"
                          Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ControlPressedBackgroundBrush}}"/>
                  <Setter TargetName="_border"
                          Property="BorderBrush" Value="{DynamicResource {x:Static theming:AppColors.ControlPressedBorderBrush}}"/>
                  <Setter TargetName="_selectedItemContent" Property="Foreground" Value="{DynamicResource {x:Static theming:AppColors.TextSecondaryBrush}}"/>
                  <Setter TargetName="_expandArrowIcon" Property="Color" Value="{DynamicResource {x:Static theming:AppColors.TextTertiaryBrush}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="_border"
                          Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ControlDisabledBackgroundBrush}}"/>
                  <Setter TargetName="_border"
                          Property="BorderBrush" Value="{DynamicResource {x:Static theming:AppColors.ControlDisabledBorderBrush}}"/>
                  <Setter TargetName="_selectedItemContent" Property="Foreground" Value="{DynamicResource {x:Static theming:AppColors.TextDisabledBrush}}"/>
                  <Setter TargetName="_expandArrowIcon" Property="Color" Value="{DynamicResource {x:Static theming:AppColors.TextDisabledBrush}}"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </ToggleButton.Template>
        </ToggleButton>
        <Popup AllowsTransparency="True"
               IsOpen="{TemplateBinding IsDropDownOpen}"
               StaysOpen="False"
               PopupAnimation="Fade"
               Opened="Popup_Opened">
          <Border Style="{StaticResource ContextMenuBorderStyle}"
                  Width="{Binding ActualWidth, ElementName=_toggleButton}">
            <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                          Margin="0, -1">
              <StackPanel Style="{StaticResource ContextMenuStackPanelStyle}"/>
            </ScrollViewer>
          </Border>
        </Popup>
        <Rectangle x:Name="_focusRect"
                   Style="{StaticResource FocusRectStyle}"
                   Visibility="Hidden"/>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="IsKeyboardFocused" Value="True">
          <Setter TargetName="_focusRect" Property="Visibility" Value="Visible"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
  </ComboBox.Template>
  <ComboBox.ItemContainerStyle>
    <Style TargetType="ComboBoxItem">
      <Setter Property="Margin" Value="0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ComboBoxItem">
            <RadioButton IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                         Focusable="False"
                         Click="RadioButton_Click">
              <ContentPresenter/>
              <RadioButton.Template>
                <ControlTemplate TargetType="RadioButton">
                  <Border x:Name="_border"
                          CornerRadius="4" Height="36"
                          Background="Transparent"
                          Margin="4, 2">
                    <Grid>
                      <Rectangle x:Name="_selectionPointer"
                                 Width="3" Height="16" RadiusX="1.5" RadiusY="1.5"
                                 Fill="{DynamicResource {x:Static theming:AppColors.AccentDefaultBrush}}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Visibility="Hidden"/>
                      <ContentControl x:Name="_itemContent"
                                      Content="{TemplateBinding Content}"/>
                    </Grid>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter TargetName="_border"
                              Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ItemHoverBackgroundBrush}}"/>
                      <Setter TargetName="_selectionPointer"
                              Property="Fill" Value="{DynamicResource {x:Static theming:AppColors.AccentSecondaryBrush}}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                      <Setter TargetName="_itemContent"
                              Property="Foreground" Value="{DynamicResource {x:Static theming:AppColors.TextSecondaryBrush}}"/>
                      <Setter TargetName="_selectionPointer"
                              Property="Fill" Value="{DynamicResource {x:Static theming:AppColors.AccentTertiaryBrush}}"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                      <Setter TargetName="_border"
                              Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ItemHoverBackgroundBrush}}"/>
                      <Setter TargetName="_selectionPointer" Property="Visibility" Value="Visible"/>
                    </Trigger>
                    <MultiTrigger>
                      <MultiTrigger.Conditions>
                        <Condition Property="IsPressed" Value="True"/>
                        <Condition Property="IsChecked" Value="False"/>
                      </MultiTrigger.Conditions>
                      <Setter TargetName="_border"
                              Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ItemPressedBackgroundBrush}}"/>
                    </MultiTrigger>
                    <Trigger Property="IsEnabled" Value="False">
                      <Setter TargetName="_itemContent"
                              Property="Foreground" Value="{DynamicResource {x:Static theming:AppColors.TextDisabledBrush}}"/>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </RadioButton.Template>
            </RadioButton>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </ComboBox.ItemContainerStyle>
</ComboBox>
