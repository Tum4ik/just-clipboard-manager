<RadioButton x:Class="Tum4ik.JustClipboardManager.Controls.TabButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:math="http://hexinnovation.com/math"
             xmlns:controls="clr-namespace:Tum4ik.JustClipboardManager.Controls"
             mc:Ignorable="d"
             Cursor="Hand"
             PreviewMouseLeftButtonDown="RadioButton_PreviewMouseLeftButtonDown"
             PreviewMouseLeftButtonUp="RadioButton_PreviewMouseLeftButtonUp"
             MouseLeave="RadioButton_MouseLeave"
             x:Name="this">
  <RadioButton.Resources>
    <math:MathConverter x:Key="MathConverter"/>
    <VisualBrush x:Key="CheckedBackgroundBrush" TileMode="None" Stretch="Fill">
      <VisualBrush.Visual>
        <Grid Width="1" Height="1" Background="{DynamicResource AppSurfaceBackgroundBrush}">
          <Border Background="{DynamicResource AppContentAreaBackgroundBrush}"/>
        </Grid>
      </VisualBrush.Visual>
    </VisualBrush>
  </RadioButton.Resources>
  <RadioButton.InputBindings>
    <KeyBinding Key="Return" Command="{Binding EnterKeyPressedCommand, ElementName=this}"/>
  </RadioButton.InputBindings>
  <RadioButton.Template>
    <ControlTemplate TargetType="controls:TabButton">
      <Border x:Name="_border"
              CornerRadius="8, 8, 0, 0"
              BorderThickness="1, 1, 1, 0"
              BorderBrush="Transparent"
              Background="Transparent"
              Width="240">
        <Canvas Width="{Binding ActualWidth, ElementName=_border}">
          <Canvas.Resources>
            <Grid x:Key="_tabFacet" x:Shared="False"
                  Width="4" Height="4">
              <Path Data="M0.5,0.5 L0.54171246,0.5 0.54685676,0.53104976 C0.76677716,1.7622338 1.7377663,2.733223 2.9689503,2.9531431 L3,2.9582875 3,3 0.5,3 z"
                    HorizontalAlignment="Left"
                    Height="3.5"
                    Stroke="{StaticResource CheckedBackgroundBrush}"
                    Stretch="Fill"
                    StrokeThickness="1"
                    VerticalAlignment="Bottom"
                    Width="3.5"/>
              <Path Stroke="{DynamicResource ContextMenuBorderBrush}" StrokeThickness="1">
                <Path.Data>
                  <PathGeometry>
                    <PathFigure StartPoint="0.5, 0">
                      <ArcSegment Size="4, 4" Point="4, 3.5" SweepDirection="Counterclockwise"/>
                    </PathFigure>
                  </PathGeometry>
                </Path.Data>
              </Path>
            </Grid>
            <Style x:Key="TabsSeparatorStyle" TargetType="Line">
              <Setter Property="Canvas.Top"
                      Value="{Binding ActualHeight, RelativeSource={RelativeSource Self},
                      Converter={StaticResource MathConverter}, ConverterParameter=x/2}"/>
              <Setter Property="X1" Value="0.5"/>
              <Setter Property="Y1" Value="0"/>
              <Setter Property="X2" Value="0.5"/>
              <Setter Property="Y2"
                      Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent},
                      Converter={StaticResource MathConverter}, ConverterParameter=x/2}"/>
              <Setter Property="StrokeThickness" Value="1"/>
              <Setter Property="Stroke" Value="{DynamicResource ItemDividerBrush}"/>
            </Style>
          </Canvas.Resources>
          <StackPanel Orientation="Horizontal">
            <Canvas.Top>
              <MultiBinding Converter="{StaticResource MathConverter}" ConverterParameter="(x-y)/2">
                <Binding Path="Parent.ActualHeight" RelativeSource="{RelativeSource Self}"/>
                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
              </MultiBinding>
            </Canvas.Top>
            <controls:SvgIcon x:Name="_icon"
                              Icon="{TemplateBinding Icon}"
                              Color="{DynamicResource TextPrimaryBrush}"
                              Width="16" Height="16"
                              VerticalAlignment="Center"
                              Margin="8, 0"/>
            <TextBlock x:Name="_text"
                       Text="{TemplateBinding Text}"
                       FontWeight="SemiBold"
                       VerticalAlignment="Center"/>
          </StackPanel>

          <!-- Checked state -->
          <ContentControl x:Name="_rightBottomFacet"
                          Canvas.Right="-2"
                          Canvas.Bottom="0"
                          Focusable="False"
                          Content="{StaticResource _tabFacet}"
                          Visibility="Collapsed"/>
          <ContentControl x:Name="_leftBottomFacet"
                          Canvas.Left="-4"
                          Canvas.Bottom="0"
                          Focusable="False"
                          Content="{StaticResource _tabFacet}"
                          Visibility="Collapsed">
            <ContentControl.LayoutTransform>
              <RotateTransform Angle="-90"/>
            </ContentControl.LayoutTransform>
          </ContentControl>

          <!-- Unchecked state -->
          <Line Style="{StaticResource TabsSeparatorStyle}"
                Canvas.Left="-1"
                Visibility="{TemplateBinding UncheckedLeftSeparatorVisibility}"/>
          <Line Style="{StaticResource TabsSeparatorStyle}"
                Canvas.Right="0"
                Visibility="{TemplateBinding UncheckedRightSeparatorVisibility}"/>
        </Canvas>
      </Border>
      <ControlTemplate.Triggers>
        <Trigger Property="IsPressed" Value="True">
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource TabPressedBackgroundBrush}"/>
        </Trigger>
        <Trigger Property="IsChecked" Value="True">
          <Setter Property="Panel.ZIndex" Value="1"/>
          <Setter TargetName="_border" Property="BorderBrush" Value="{DynamicResource ContextMenuBorderBrush}"/>
          <Setter TargetName="_border" Property="Background" Value="{StaticResource CheckedBackgroundBrush}"/>
          <Setter TargetName="_border" Property="Margin" Value="4, 0"/>
          <Setter TargetName="_rightBottomFacet" Property="Visibility" Value="Visible"/>
          <Setter TargetName="_leftBottomFacet" Property="Visibility" Value="Visible"/>
        </Trigger>
        <Trigger Property="IsChecked" Value="False">
          <Setter Property="Panel.ZIndex" Value="0"/>
          <Setter TargetName="_icon" Property="Color" Value="{DynamicResource TextSecondaryBrush}"/>
          <Setter TargetName="_text" Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
          <Setter TargetName="_text" Property="FontWeight" Value="Regular"/>
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsMouseOver" Value="True"/>
            <Condition Property="IsChecked" Value="False"/>
            <Condition Property="IsPressed" Value="False"/>
          </MultiTrigger.Conditions>
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource ItemHoverBackgroundBrush}"/>
        </MultiTrigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
  </RadioButton.Template>
</RadioButton>
