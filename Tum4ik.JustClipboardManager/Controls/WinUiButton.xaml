<Button x:Class="Tum4ik.JustClipboardManager.Controls.WinUiButton"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:controls="clr-namespace:Tum4ik.JustClipboardManager.Controls"
        xmlns:theming="clr-namespace:Tum4ik.JustClipboardManager.PluginDevKit.Theming;assembly=Tum4ik.JustClipboardManager.PluginDevKit"
        mc:Ignorable="d"
        Cursor="Hand"
        FocusVisualStyle="{x:Null}">
  <Button.Template>
    <ControlTemplate TargetType="controls:WinUiButton">
      <Grid>
        <Border x:Name="_border"
                BorderThickness="1" BorderBrush="{DynamicResource {x:Static theming:AppColors.ControlBorderGradientBrush}}"
                Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" MinWidth="120" CornerRadius="4"
                Background="{DynamicResource {x:Static theming:AppColors.ControlBackgroundBrush}}">
          <Grid HorizontalAlignment="Center"
                Margin="3, 0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <controls:SvgIcon x:Name="_icon" Grid.Column="0"
                              Width="{TemplateBinding IconWidth}" Height="{TemplateBinding IconHeight}"
                              Icon="{TemplateBinding Icon}"
                              Margin="4, 0"/>
            <TextBlock x:Name="_text" Grid.Column="1"
                       Text="{TemplateBinding Text}"
                       VerticalAlignment="Center"
                       Margin="4, 0"/>
          </Grid>
        </Border>
        <Rectangle x:Name="_accentBorder"
                   StrokeThickness="1"
                   RadiusX="4" RadiusY="4" Margin="1"
                   Stroke="{DynamicResource {x:Static theming:AppColors.ControlAccentBorderBrush}}"
                   Visibility="Collapsed"/>
        <Border x:Name="_focusBorder"
                BorderThickness="2"
                CornerRadius="4"/>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="IsKeyboardNavigatedFocus" Value="True">
          <Setter TargetName="_focusBorder" Property="BorderBrush" Value="{DynamicResource {x:Static theming:AppColors.TextPrimaryBrush}}"/>
        </Trigger>
        <Trigger Property="IconPosition" Value="After">
          <Setter TargetName="_icon" Property="Grid.Column" Value="1"/>
          <Setter TargetName="_text" Property="Grid.Column" Value="0"/>
        </Trigger>
        <Trigger Property="Text" Value="{x:Null}">
          <Setter TargetName="_border" Property="MinWidth" Value="32"/>
          <Setter TargetName="_text" Property="Visibility" Value="Collapsed"/>
        </Trigger>
        <Trigger Property="Text" Value="">
          <Setter TargetName="_border" Property="MinWidth" Value="32"/>
          <Setter TargetName="_text" Property="Visibility" Value="Collapsed"/>
        </Trigger>
        <Trigger Property="Icon" Value="{x:Null}">
          <Setter TargetName="_icon" Property="Visibility" Value="Collapsed"/>
        </Trigger>

        <Trigger Property="ButtonStyle" Value="Accent">
          <Setter TargetName="_border" Property="BorderThickness" Value="0"/>
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.AccentDefaultBrush}}"/>
          <Setter TargetName="_accentBorder" Property="Visibility" Value="Visible"/>
          <Setter TargetName="_icon" Property="Color" Value="{DynamicResource {x:Static theming:AppColors.TextOnAccentPrimaryBrush}}"/>
          <Setter TargetName="_text" Property="Foreground" Value="{DynamicResource {x:Static theming:AppColors.TextOnAccentPrimaryBrush}}"/>
        </Trigger>

        <Trigger Property="ButtonStyle" Value="Subtle">
          <Setter TargetName="_border" Property="BorderThickness" Value="0"/>
          <Setter TargetName="_border" Property="Background" Value="Transparent"/>
        </Trigger>

        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ButtonStyle" Value="Standard"/>
            <Condition Property="IsMouseOver" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ControlHoverBackgroundBrush}}"/>
        </MultiTrigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ButtonStyle" Value="Accent"/>
            <Condition Property="IsMouseOver" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter TargetName="_border" Property="BorderThickness" Value="0"/>
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.AccentSecondaryBrush}}"/>
        </MultiTrigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ButtonStyle" Value="Subtle"/>
            <Condition Property="IsMouseOver" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ItemHoverBackgroundBrush}}"/>
        </MultiTrigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ButtonStyle" Value="Standard"/>
            <Condition Property="IsPressed" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ControlHoverBackgroundBrush}}"/>
          <Setter TargetName="_icon" Property="Color" Value="{DynamicResource {x:Static theming:AppColors.TextSecondaryBrush}}"/>
          <Setter TargetName="_text" Property="Foreground" Value="{DynamicResource {x:Static theming:AppColors.TextSecondaryBrush}}"/>
        </MultiTrigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ButtonStyle" Value="Accent"/>
            <Condition Property="IsPressed" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter TargetName="_border" Property="BorderThickness" Value="0"/>
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.AccentTertiaryBrush}}"/>
          <Setter TargetName="_accentBorder" Property="Stroke">
            <Setter.Value>
              <SolidColorBrush Color="White" Opacity="0.08"/>
            </Setter.Value>
          </Setter>
          <Setter TargetName="_icon" Property="Color" Value="{DynamicResource {x:Static theming:AppColors.TextOnAccentSecondaryBrush}}"/>
          <Setter TargetName="_text" Property="Foreground" Value="{DynamicResource {x:Static theming:AppColors.TextOnAccentSecondaryBrush}}"/>
        </MultiTrigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ButtonStyle" Value="Subtle"/>
            <Condition Property="IsPressed" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ItemPressedBackgroundBrush}}"/>
          <Setter TargetName="_icon" Property="Color" Value="{DynamicResource {x:Static theming:AppColors.TextSecondaryBrush}}"/>
          <Setter TargetName="_text" Property="Foreground" Value="{DynamicResource {x:Static theming:AppColors.TextSecondaryBrush}}"/>
        </MultiTrigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ButtonStyle" Value="Standard"/>
            <Condition Property="IsEnabled" Value="False"/>
          </MultiTrigger.Conditions>
          <Setter TargetName="_border" Property="BorderBrush" Value="{DynamicResource {x:Static theming:AppColors.ControlDisabledBorderBrush}}"/>
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ControlDisabledBackgroundBrush}}"/>
          <Setter TargetName="_icon" Property="Color" Value="{DynamicResource {x:Static theming:AppColors.TextDisabledBrush}}"/>
          <Setter TargetName="_text" Property="Foreground" Value="{DynamicResource {x:Static theming:AppColors.TextDisabledBrush}}"/>
        </MultiTrigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ButtonStyle" Value="Accent"/>
            <Condition Property="IsEnabled" Value="False"/>
          </MultiTrigger.Conditions>
          <Setter TargetName="_accentBorder" Property="Visibility" Value="Collapsed"/>
          <Setter TargetName="_border" Property="BorderThickness" Value="0"/>
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.AccentDisabledBrush}}"/>
        </MultiTrigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ButtonStyle" Value="Subtle"/>
            <Condition Property="IsEnabled" Value="False"/>
          </MultiTrigger.Conditions>
          <Setter TargetName="_icon" Property="Color" Value="{DynamicResource {x:Static theming:AppColors.TextDisabledBrush}}"/>
          <Setter TargetName="_text" Property="Foreground" Value="{DynamicResource {x:Static theming:AppColors.TextDisabledBrush}}"/>
        </MultiTrigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
  </Button.Template>
</Button>
