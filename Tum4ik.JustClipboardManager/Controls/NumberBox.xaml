<TextBox x:Class="Tum4ik.JustClipboardManager.Controls.NumberBox"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
         xmlns:controls="clr-namespace:Tum4ik.JustClipboardManager.Controls"
         xmlns:theming="clr-namespace:Tum4ik.JustClipboardManager.PluginDevKit.Theming;assembly=Tum4ik.JustClipboardManager.PluginDevKit"
         mc:Ignorable="d"
         Validation.ErrorTemplate="{x:Null}"
         Cursor="IBeam"
         PreviewTextInput="TextBox_PreviewTextInput"
         PreviewKeyDown="TextBox_PreviewKeyDown"
         GotFocus="TextBox_GotFocus">
  <TextBox.Template>
    <ControlTemplate TargetType="controls:NumberBox">
      <ControlTemplate.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
      </ControlTemplate.Resources>
      <Grid>
        <Border x:Name="_border"
                CornerRadius="4" Height="32" MinWidth="124" MaxWidth="280"
                BorderThickness="1"
                BorderBrush="{DynamicResource {x:Static theming:AppColors.ControlBorderGradientBrush}}"
                Background="{DynamicResource {x:Static theming:AppColors.ControlBackgroundBrush}}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
              <!--<ColumnDefinition Width="Auto"/>-->
            </Grid.ColumnDefinitions>
            <ScrollViewer x:Name="PART_ContentHost"
                          Grid.Column="0"
                          VerticalAlignment="Center"
                          Margin="8, 0"/>
            <controls:InputFieldButton x:Name="_clearButton" Grid.Column="1" Icon="ChromeClose" Margin="1, 0, 15, 0"
                                       Click="ClearButton_Click"
                                       Focusable="False"/>
            <!--<controls:SvgIcon Grid.Column="2"
            Icon="Spinner" Width="16" Height="16" Margin="9, 0"
            Color="{DynamicResource {x:Static theming:AppColors.TextSecondaryBrush}}"/>-->
          </Grid>
        </Border>
        <Border x:Name="_focusUnderline"
                Visibility="Hidden"
                Height="2" VerticalAlignment="Bottom" CornerRadius="0, 0, 4, 4"
                Background="{DynamicResource {x:Static theming:AppColors.AccentDefaultBrush}}"/>
        <!--<Popup AllowsTransparency="True"
        IsOpen="{TemplateBinding IsFocused}"
        StaysOpen="True"
        PopupAnimation="Fade">
        <Border Style="{StaticResource ContextMenuBorderStyle}"
        Width="48" Height="88">

        </Border>
        </Popup>-->
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="Text" Value="">
          <Setter TargetName="_clearButton" Property="Visibility" Value="Hidden"/>
        </Trigger>
        <Trigger Property="Text" Value="{x:Null}">
          <Setter TargetName="_clearButton" Property="Visibility" Value="Hidden"/>
        </Trigger>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ControlHoverBackgroundBrush}}"/>
        </Trigger>
        <Trigger Property="IsFocused" Value="True">
          <Setter TargetName="_border"
                  Property="Background" Value="{DynamicResource {x:Static theming:AppColors.TextBoxInputActiveBackgroundBrush}}"/>
          <Setter TargetName="_focusUnderline" Property="Visibility" Value="Visible"/>
        </Trigger>
        <Trigger Property="IsFocused" Value="False">
          <Setter TargetName="_clearButton" Property="Visibility" Value="Hidden"/>
        </Trigger>
        <Trigger Property="IsEnabled" Value="False">
          <Setter Property="Foreground" Value="{DynamicResource {x:Static theming:AppColors.TextDisabledBrush}}"/>
          <Setter TargetName="_border" Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ControlDisabledBackgroundBrush}}"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
  </TextBox.Template>
</TextBox>
