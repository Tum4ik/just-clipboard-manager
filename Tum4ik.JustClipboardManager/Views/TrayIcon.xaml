<tb:TaskbarIcon x:Class="Tum4ik.JustClipboardManager.Views.TrayIcon"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:tb="http://www.hardcodet.net/taskbar" 
                xmlns:viewmodels="clr-namespace:Tum4ik.JustClipboardManager.ViewModels" 
                xmlns:services="clr-namespace:Tum4ik.JustClipboardManager.Services"
                xmlns:const="clr-namespace:Tum4ik.JustClipboardManager.Constants"
                xmlns:icons="clr-namespace:Tum4ik.JustClipboardManager.Icons;assembly=Tum4ik.JustClipboardManager.Icons"
                xmlns:converters="clr-namespace:Tum4ik.JustClipboardManager.Converters"
                mc:Ignorable="d"
                d:DataContext="{d:DesignInstance Type=viewmodels:TrayIconViewModel}"
                IconSource="{Binding TrayIcon}"
                UseLayoutRounding="True">
  <tb:TaskbarIcon.ContextMenu>
    <ContextMenu Background="White" x:Name="this">
      <ContextMenu.Resources>
        <converters:EqualityConverter x:Key="EqualityConverter"/>
      </ContextMenu.Resources>
      <!--<MenuItem Header="Clips"/>-->
      <MenuItem Header="{Binding Translate[Settings]}"
                Command="{Binding OpenMainDialogCommand}"
                CommandParameter="{x:Static const:ViewNames.SettingsView}"/>
      <MenuItem Header="{Binding Translate[About]}"
                Command="{Binding OpenMainDialogCommand}"
                CommandParameter="{x:Static const:ViewNames.AboutView}"/>
      <Separator/>
      <MenuItem Header="{Binding Translate[Theme]}" Background="White">
        <MenuItem Header="Light" IsCheckable="True"
                  Command="{Binding ChangeThemeCommand}"
                  CommandParameter="{x:Static services:Theme.Light}"/>
        <MenuItem Header="Dark" IsCheckable="True" 
                  Command="{Binding ChangeThemeCommand}"
                  CommandParameter="{x:Static services:Theme.Dark}"/>
      </MenuItem>
      <MenuItem Header="{Binding Translate[Language]}" Background="White"
                ItemsSource="{Binding Languages}">
        <MenuItem.ItemContainerStyle>
          <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
            <Setter Property="IsCheckable" Value="True"/>
            <Setter Property="IsChecked">
              <Setter.Value>
                <MultiBinding Mode="OneWay" Converter="{StaticResource EqualityConverter}">
                  <Binding Path="DataContext.SelectedLanguage"
                           RelativeSource="{RelativeSource AncestorType=ContextMenu}"/>
                  <Binding Path="."/>
                </MultiBinding>
              </Setter.Value>
            </Setter>
            <Setter Property="Command"
                    Value="{Binding DataContext.ChangeLanguageCommand,
                    RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
            <Setter Property="CommandParameter" Value="{Binding}"/>
          </Style>
        </MenuItem.ItemContainerStyle>
        <MenuItem.ItemTemplate>
          <DataTemplate>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <TextBlock Grid.Column="0" Text="{Binding Culture.NativeName}"/>
              <icons:SvgIcon Grid.Column="1" Icon="{Binding Icon}"
                             Width="16" Height="16" Margin="12, 0, 0, 0"/>
            </Grid>
          </DataTemplate>
        </MenuItem.ItemTemplate>
      </MenuItem>
      <Separator/>
      <MenuItem Header="{Binding Translate[Exit]}" Command="{Binding ExitCommand}" />
    </ContextMenu>
  </tb:TaskbarIcon.ContextMenu>
</tb:TaskbarIcon>
