<Window x:Class="Tum4ik.JustClipboardManager.Views.PasteWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:Tum4ik.JustClipboardManager.ViewModels"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:controls="clr-namespace:Tum4ik.JustClipboardManager.Controls"
        xmlns:theming="clr-namespace:Tum4ik.JustClipboardManager.PluginDevKit.Theming;assembly=Tum4ik.JustClipboardManager.PluginDevKit"
        d:DataContext="{d:DesignInstance vm:PasteWindowViewModel}"
        mc:Ignorable="d"
        Activated="This_Activated"
        IsVisibleChanged="This_IsVisibleChanged"
        ShowInTaskbar="False"
        SizeToContent="WidthAndHeight"
        WindowStartupLocation="Manual"
        Margin="24"
        Style="{StaticResource WindowBefore11Style}"
        x:Name="This">
  <Window.Resources>
    <controls:ClipTypeDataTemplateSelector x:Key="ClipTypeDataTemplateSelector"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
  </Window.Resources>
  <i:Interaction.Triggers>
    <i:PropertyChangedTrigger Binding="{Binding Visibility, ElementName=This}">
      <i:InvokeCommandAction Command="{Binding WindowVisibilityChangedCommand}"
                             CommandParameter="{Binding Visibility, ElementName=This}"/>
    </i:PropertyChangedTrigger>
    <i:EventTrigger EventName="Deactivated">
      <i:InvokeCommandAction Command="{Binding WindowDeactivatedCommand}"/>
    </i:EventTrigger>
  </i:Interaction.Triggers>
  <Window.Template>
    <ControlTemplate TargetType="Window">
      <Border x:Name="_windowBorder"
              Width="420"
              Height="300"
              MinWidth="200"
              MinHeight="86"
              CornerRadius="8"
              Margin="{TemplateBinding Margin}"
              Background="{TemplateBinding Background}"
              BorderThickness="{TemplateBinding BorderThickness}"
              BorderBrush="{TemplateBinding BorderBrush}"
              Effect="{TemplateBinding Effect}"
              Padding="4">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <ContentPresenter Grid.Row="0" Grid.Column="0"/>
          <Thumb Grid.Row="1" Grid.Column="0" Cursor="SizeNS" DragDelta="Thumb_VerticalDragDelta"
                 Visibility="{Binding DataContext.IsSettingsMode, ElementName=This, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Thumb.Template>
              <ControlTemplate>
                <Border Height="5" Margin="2, 4, 2, 0" Background="Transparent">
                  <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                             Background="{DynamicResource {x:Static theming:AppColors.TextSecondaryBrush}}"/>
                </Border>
              </ControlTemplate>
            </Thumb.Template>
          </Thumb>
          <Thumb Grid.Row="0" Grid.Column="1" Cursor="SizeWE" DragDelta="Thumb_HorizontalDragDelta"
                 Visibility="{Binding DataContext.IsSettingsMode, ElementName=This, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Thumb.Template>
              <ControlTemplate>
                <Border Width="5" Margin="4, 2, 0, 2" Background="Transparent">
                  <StackPanel Orientation="Horizontal">
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                               Background="{DynamicResource {x:Static theming:AppColors.TextSecondaryBrush}}"/>
                  </StackPanel>
                </Border>
              </ControlTemplate>
            </Thumb.Template>
          </Thumb>
        </Grid>
      </Border>
    </ControlTemplate>
  </Window.Template>
  <DockPanel>
    <Grid DockPanel.Dock="Top">
      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <controls:SearchBox x:Name="_searchBox"
                          Grid.Column="0"
                          Text="{Binding Search, UpdateSourceTrigger=PropertyChanged, Delay=1000}"
                          Margin="0, 0, 4, 0"/>
      <controls:WinUiButton Grid.Column="1"
                            Icon="Settings"
                            ToolTip="{Binding Translate[Settings]}"
                            Command="{Binding SettingsCommand}">
        <i:Interaction.Triggers>
          <i:DataTrigger Binding="{Binding IsSettingsMode}" Value="True">
            <i:ChangePropertyAction PropertyName="ButtonStyle" Value="Accent"/>
          </i:DataTrigger>
          <i:DataTrigger Binding="{Binding IsSettingsMode}" Value="False">
            <i:ChangePropertyAction PropertyName="ButtonStyle" Value="Standard"/>
          </i:DataTrigger>
        </i:Interaction.Triggers>
      </controls:WinUiButton>
    </Grid>
    <ListBox x:Name="_listBox" Margin="0, 4, 0, 0"
             ItemsSource="{Binding Clips}"
             ItemTemplateSelector="{StaticResource ClipTypeDataTemplateSelector}"
             ScrollViewer.ScrollChanged="ListBox_ScrollChanged"
             ScrollViewer.CanContentScroll="False"
             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
      <ListBox.Resources>
        <Style TargetType="ListBoxItem">
          <Setter Property="Cursor" Value="Hand"/>
          <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="ListBoxItem">
                <Button Command="{Binding DataContext.PasteDataCommand, ElementName=This}" CommandParameter="{Binding}">
                  <ContentPresenter/>
                  <Button.Template>
                    <ControlTemplate TargetType="Button">
                      <Border x:Name="_border"
                              CornerRadius="4" MinHeight="36"
                              Background="Transparent">
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                          </Grid.ColumnDefinitions>
                          <ContentPresenter Grid.Column="0" Margin="12, 0" />
                          <controls:InputFieldButton Grid.Column="1" Icon="Delete" Margin="3, 0"
                                                     Command="{Binding DataContext.DeleteClipCommand, ElementName=This}"
                                                     CommandParameter="{Binding}"/>
                        </Grid>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                          <Setter TargetName="_border"
                                  Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ItemHoverBackgroundBrush}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                          <Setter TargetName="_border"
                                  Property="Background" Value="{DynamicResource {x:Static theming:AppColors.ItemPressedBackgroundBrush}}"/>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Button.Template>
                </Button>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </ListBox.Resources>
      <ListBox.Template>
        <ControlTemplate TargetType="ListBox">
          <Border CornerRadius="4"
                  BorderThickness="1" BorderBrush="{DynamicResource {x:Static theming:AppColors.ControlBorderGradientBrush}}"
                  Background="{DynamicResource {x:Static theming:AppColors.ControlBackgroundBrush}}">
            <ScrollViewer Padding="1">
              <ItemsPresenter/>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </ListBox.Template>
    </ListBox>
  </DockPanel>
</Window>
