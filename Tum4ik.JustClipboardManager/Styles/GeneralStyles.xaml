<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:system="clr-namespace:System;assembly=netstandard" 
                    xmlns:icons="clr-namespace:Tum4ik.JustClipboardManager.Icons;assembly=Tum4ik.JustClipboardManager.Icons">

  <system:Double x:Key="FontSize">14</system:Double>
  
  <ContextMenu x:Key="ContextMenuDisabled" Visibility="Collapsed"/>
  

  <Style TargetType="Window">
    <Setter Property="WindowStyle" Value="None"/>
    <Setter Property="AllowsTransparency" Value="True"/>
    <Setter Property="SizeToContent" Value="WidthAndHeight"/>
    <Setter Property="FontSize" Value="{StaticResource FontSize}"/>
  </Style>

  <DropShadowEffect x:Key="DefaultDropShadowEffect" 
                    Color="Black"
                    Opacity=".3"
                    BlurRadius="8"
                    ShadowDepth="2"
                    RenderingBias="Quality"/>

  <Style x:Key="ContextMenuBorderStyle" TargetType="Border">
    <Setter Property="CornerRadius" Value="7"/>
    <Setter Property="Margin" Value="8"/>
    <Setter Property="Background" Value="{DynamicResource AcrylicBackgroundBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="BorderBrush" Value="{DynamicResource PopupBorderBrush}"/>
    <Setter Property="Effect" Value="{StaticResource DefaultDropShadowEffect}"/>
  </Style>
  <Style x:Key="ContextMenuStackPanelStyle" TargetType="StackPanel">
    <Setter Property="IsItemsHost" Value="True"/>
    <Setter Property="Margin" Value="0, 3"/>
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle"/>
  </Style>
  <Style TargetType="ContextMenu">
    <Setter Property="FontSize" Value="{StaticResource FontSize}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContextMenu">
          <Border Style="{StaticResource ContextMenuBorderStyle}">
            <StackPanel Style="{StaticResource ContextMenuStackPanelStyle}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="MenuItem">
    <Setter Property="Cursor" Value="Hand"/>
  </Style>
  <Style x:Key="MenuItemBorderStyle" TargetType="Border">
    <Setter Property="Margin" Value="5, 2"/>
    <Setter Property="Height" Value="36"/>
    <Setter Property="MinWidth" Value="152"/>
    <Setter Property="CornerRadius" Value="4"/>
    <Setter Property="Background" Value="Transparent"/>
    <Style.Triggers>
      <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
        <Setter Property="Background" Value="{DynamicResource ItemHoverBackgroundBrush}"/>
      </DataTrigger>
      <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
        <Setter Property="Background" Value="{DynamicResource ItemPressedBackgroundBrush}"/>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MenuItemTextBlockStyle" TargetType="TextBlock">
    <Setter Property="Text" Value="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="Margin" Value="12, 0"/>
  </Style>
  <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
    <Border Style="{StaticResource MenuItemBorderStyle}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <icons:SvgIcon Grid.Column="0" 
                       x:Name="CheckIcon"
                       Visibility="Collapsed"
                       Icon="Check" Color="{DynamicResource TextPrimaryBrush}"
                       Width="11" Height="11"
                       VerticalAlignment="Center"
                       Margin="15, 0, 3, 0"/>
        <TextBlock Grid.Column="1" Style="{StaticResource MenuItemTextBlockStyle}"/>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsCheckable" Value="True"/>
          <Condition Property="IsChecked" Value="False"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="CheckIcon" Property="Visibility" Value="Hidden"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsCheckable" Value="True"/>
          <Condition Property="IsChecked" Value="True"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="CheckIcon" Property="Visibility" Value="Visible"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
    <Border Style="{StaticResource MenuItemBorderStyle}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <TextBlock x:Name="_text" Grid.Column="0" Style="{StaticResource MenuItemTextBlockStyle}"/>
        <icons:SvgIcon x:Name="_icon"
                       Grid.Column="1"
                       Icon="Chevron" Color="{DynamicResource TextSecondaryBrush}"
                       Width="8" Height="8"
                       VerticalAlignment="Center"
                       Margin="0, 0, 16, 0"/>
        <Popup x:Name="Popup"
               Placement="Right"
               IsOpen="{TemplateBinding IsSubmenuOpen}"
               AllowsTransparency="True"
               Focusable="False"
               PopupAnimation="Fade">
          <Border Style="{StaticResource ContextMenuBorderStyle}">
            <StackPanel Style="{StaticResource ContextMenuStackPanelStyle}"/>
          </Border>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsPressed" Value="True">
        <Setter TargetName="_text" Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
        <Setter TargetName="_icon" Property="Color" Value="{DynamicResource TextTertiaryBrush}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
    <Setter Property="Margin" Value="0, 2"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Separator">
          <Border Background="{DynamicResource ItemDividerBrush}" Height="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="TextBox">
    <Setter Property="ContextMenu" Value="{StaticResource ContextMenuDisabled}"/>
  </Style>

</ResourceDictionary>
